user  nginx;
worker_processes  auto;
worker_rlimit_nofile 100000;

pcre_jit on;

## Load Dynamic Modules ##
load_module modules/ngx_http_perl_module.so;
load_module modules/ngx_http_image_filter_module.so;
#load_module modules/ngx_http_brotli_filter_module.so;
#load_module modules/ngx_http_brotli_static_module.so;

pid        /var/run/nginx.pid;

events {
    worker_connections  10524;
    multi_accept on;
       }

http   {
    index         index.html index.php;
    include       mime.types;
    default_type  application/octet-stream;
    
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request_method $scheme://$host$request_uri $server_protocol" $status $bytes_sent "$http_referer" "$http_user_agent" $request_time - "$request_id"';

# log_format  error403  '$remote_addr - [$time_local] "$request" "$http_user_agent" - "$request_id" - "$geoip_country_code"';

  ## Nginx amplify metrics
#    log_format  main_ext '$remote_addr - $remote_user [$time_local] "$request" '
#                         '$status $body_bytes_sent "$http_referer" '
#                         '"$http_user_agent" "$http_x_forwarded_for" '
#                         '"$host" sn="$server_name" '
#                         'rt=$request_time '
#                         'ua="$upstream_addr" us="$upstream_status" '
#                         'ut="$upstream_response_time" ul="$upstream_response_length" '
#                         'cs=$upstream_cache_status' ;
	
    ## Enable POST logging and mask passwords
    # log_format postlog '$remote_addr - $remote_user [$time_local] "$request_method $scheme://$host$request_uri $server_protocol" $status $bytes_sent "$http_referer" "$http_user_agent" "$masked_post_pwd_data"';
    # perl_set $masked_post_pwd_data '
    #            sub {
    #                    my $r = shift;
    #                    my $req =  $r->request_body;
    	### test either one line below or create different regex
    	##  $req =~ s/password(%5D|_.+?)?\=\w+/PASSWORD_REMOVED/g;
    	##  $req =~ s/password.+/PASSWORD_REMOVED/g;
    #                    return $req;
    #                } ';

    access_log  /var/log/nginx/access.log  main if=$writelog;
    #access_log  /var/log/nginx/access.log.gz  main gzip flush=1m if=$writelog;
    error_log   /var/log/nginx/error.log  error;

    keepalive_timeout   5;
    autoindex		off;
    server_tokens       off;
    port_in_redirect	off;
    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;

    client_max_body_size 64m;
    client_body_buffer_size 128k;
    client_header_buffer_size 16k;
    large_client_header_buffers 4 16k;

    fastcgi_buffer_size 32k;
    fastcgi_buffers 4 16k;
    fastcgi_busy_buffers_size 32k;

    proxy_buffer_size 32k;
    proxy_buffers 4 16k;
    proxy_busy_buffers_size 32k;

    proxy_http_version 1.1;
    proxy_read_timeout 300s;
    proxy_send_timeout 300s;

    proxy_set_header Accept-Encoding "";
    proxy_set_header X-Real-IP $realip_remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header Host $host;
    proxy_set_header X-Scheme https;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-Port 443;
    proxy_set_header X-Secure on;

    # Microcache
    #proxy_cache_path /tmp/nginx levels=1:2 keys_zone=microcache:100M max_size=500M inactive=2h;

    ## Flood protection example (see conf_m2/extra_protect.conf)
    limit_req_zone $binary_remote_addr zone=checkout:35m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=customer:35m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=catalog:35m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=search:35m rate=1r/s;
    #limit_req_zone $binary_remote_addr zone=apiaccess:35m rate=30r/m;
    limit_req_zone $cartId zone=payment:35m rate=10r/m;

    ## Cache open FD
    open_file_cache max=35000 inactive=30s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;

    ##  SSL global settings
    #ssl_session_cache		shared:SSL:45m;
    #ssl_session_timeout	30m;
    #ssl_protocols		TLSv1.2 TLSv1.3;
    #ssl_ciphers                ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    #ssl_prefer_server_ciphers	off;
    #ssl_dhparam 		/etc/ssl/certs/dhparams.pem;
    #ssl_buffer_size		4k;

    ## debug this option first! set auto or disable completely!
    #ssl_ecdh_curve		secp521r1:secp384r1:prime256v1;

    #ssl_stapling on;
    #ssl_trusted_certificate	/etc/letsencrypt/live/example.com/chain.pem;
    #resolver 8.8.8.8 8.8.4.4 valid=3600s;
    #resolver_timeout 5s;

    ## Get real ip from local proxy
    set_real_ip_from 127.0.0.1;
    ## Get real ip from CloudFlare proxy
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 104.16.0.0/13;
    set_real_ip_from 104.24.0.0/14;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 131.0.72.0/22;

    #real_ip_header CF-Connecting-IP;
    real_ip_header X-Forwarded-For;

     ## ROUTE TO BACKEND NODES
     #upstream php-backend {
     #hash $remote_addr consistent;
     #least_conn;
     #   include /etc/nginx/backend.conf;
     #}

     ## ROUTE TO ADMIN NODE
     #upstream admin {
     #hash $remote_addr consistent;
     #least_conn;
     #   server 10.x.x.x;
     #   server 10.x.x.x;
     #}

    upstream varnish { server 127.0.0.1:8081; }
    upstream backend { server 127.0.0.1:8080; }

    ## Main domain configuration
    include /etc/nginx/sites-enabled/*.conf;

}
